// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module atsc_rsdecoder_impl_decode (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        rs_out_data_address0,
        rs_out_data_ce0,
        rs_out_data_we0,
        rs_out_data_d0,
        rs_in_data_address0,
        rs_in_data_ce0,
        rs_in_data_q0,
        ap_return
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 7'b1;
parameter    ap_ST_st2_fsm_1 = 7'b10;
parameter    ap_ST_st3_fsm_2 = 7'b100;
parameter    ap_ST_st4_fsm_3 = 7'b1000;
parameter    ap_ST_st5_fsm_4 = 7'b10000;
parameter    ap_ST_st6_fsm_5 = 7'b100000;
parameter    ap_ST_st7_fsm_6 = 7'b1000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv6_30 = 6'b110000;
parameter    ap_const_lv6_1 = 6'b1;
parameter    ap_const_lv8_CF = 8'b11001111;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv8_30 = 8'b110000;
parameter    ap_const_lv8_BB = 8'b10111011;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] rs_out_data_address0;
output   rs_out_data_ce0;
output   rs_out_data_we0;
output  [7:0] rs_out_data_d0;
output  [7:0] rs_in_data_address0;
output   rs_in_data_ce0;
input  [7:0] rs_in_data_q0;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg rs_out_data_ce0;
reg rs_out_data_we0;
reg rs_in_data_ce0;
(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm = 7'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_25;
wire   [5:0] i_24_fu_144_p2;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_51;
wire   [7:0] i_23_fu_161_p2;
reg   [7:0] i_23_reg_222;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_60;
wire   [0:0] exitcond1_fu_155_p2;
wire   [31:0] grp_atsc_rsdecoder_impl_decode_rs_char_fu_129_ap_return;
reg   [31:0] ncorrections_reg_232;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_75;
wire    grp_atsc_rsdecoder_impl_decode_rs_char_fu_129_ap_done;
wire   [7:0] i_25_fu_189_p2;
reg   [7:0] i_25_reg_239;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_88;
wire   [0:0] exitcond_fu_183_p2;
reg   [7:0] tmp_address0;
reg    tmp_ce0;
reg    tmp_we0;
reg   [7:0] tmp_d0;
wire   [7:0] tmp_q0;
wire    grp_atsc_rsdecoder_impl_decode_rs_char_fu_129_ap_start;
wire    grp_atsc_rsdecoder_impl_decode_rs_char_fu_129_ap_idle;
wire    grp_atsc_rsdecoder_impl_decode_rs_char_fu_129_ap_ready;
wire   [7:0] grp_atsc_rsdecoder_impl_decode_rs_char_fu_129_data_address0;
wire    grp_atsc_rsdecoder_impl_decode_rs_char_fu_129_data_ce0;
wire    grp_atsc_rsdecoder_impl_decode_rs_char_fu_129_data_we0;
wire   [7:0] grp_atsc_rsdecoder_impl_decode_rs_char_fu_129_data_d0;
wire   [7:0] grp_atsc_rsdecoder_impl_decode_rs_char_fu_129_data_q0;
reg   [5:0] i_reg_94;
wire   [0:0] exitcond2_fu_138_p2;
reg   [7:0] i1_reg_105;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_131;
reg   [7:0] i2_reg_117;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_143;
reg    grp_atsc_rsdecoder_impl_decode_rs_char_fu_129_ap_start_ap_start_reg = 1'b0;
wire   [63:0] tmp_s_fu_150_p1;
wire   [63:0] tmp_126_fu_167_p1;
wire   [63:0] tmp_128_fu_178_p1;
wire   [63:0] tmp_130_fu_201_p1;
wire   [63:0] tmp_131_fu_206_p1;
wire   [7:0] tmp_127_fu_172_p2;
wire   [7:0] tmp_129_fu_195_p2;
reg   [6:0] ap_NS_fsm;


atsc_rsdecoder_impl_decode_tmp #(
    .DataWidth( 8 ),
    .AddressRange( 255 ),
    .AddressWidth( 8 ))
tmp_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( tmp_address0 ),
    .ce0( tmp_ce0 ),
    .we0( tmp_we0 ),
    .d0( tmp_d0 ),
    .q0( tmp_q0 )
);

atsc_rsdecoder_impl_decode_rs_char grp_atsc_rsdecoder_impl_decode_rs_char_fu_129(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_atsc_rsdecoder_impl_decode_rs_char_fu_129_ap_start ),
    .ap_done( grp_atsc_rsdecoder_impl_decode_rs_char_fu_129_ap_done ),
    .ap_idle( grp_atsc_rsdecoder_impl_decode_rs_char_fu_129_ap_idle ),
    .ap_ready( grp_atsc_rsdecoder_impl_decode_rs_char_fu_129_ap_ready ),
    .data_address0( grp_atsc_rsdecoder_impl_decode_rs_char_fu_129_data_address0 ),
    .data_ce0( grp_atsc_rsdecoder_impl_decode_rs_char_fu_129_data_ce0 ),
    .data_we0( grp_atsc_rsdecoder_impl_decode_rs_char_fu_129_data_we0 ),
    .data_d0( grp_atsc_rsdecoder_impl_decode_rs_char_fu_129_data_d0 ),
    .data_q0( grp_atsc_rsdecoder_impl_decode_rs_char_fu_129_data_q0 ),
    .ap_return( grp_atsc_rsdecoder_impl_decode_rs_char_fu_129_ap_return )
);



always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin : ap_ret_grp_atsc_rsdecoder_impl_decode_rs_char_fu_129_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_atsc_rsdecoder_impl_decode_rs_char_fu_129_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(exitcond1_fu_155_p2 == ap_const_lv1_0))) begin
            grp_atsc_rsdecoder_impl_decode_rs_char_fu_129_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_atsc_rsdecoder_impl_decode_rs_char_fu_129_ap_ready)) begin
            grp_atsc_rsdecoder_impl_decode_rs_char_fu_129_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond2_fu_138_p2))) begin
        i1_reg_105 <= ap_const_lv8_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        i1_reg_105 <= i_23_reg_222;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        i2_reg_117 <= i_25_reg_239;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & ~(ap_const_logic_0 == grp_atsc_rsdecoder_impl_decode_rs_char_fu_129_ap_done))) begin
        i2_reg_117 <= ap_const_lv8_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond2_fu_138_p2))) begin
        i_reg_94 <= i_24_fu_144_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        i_reg_94 <= ap_const_lv6_0;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        i_23_reg_222 <= i_23_fu_161_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        i_25_reg_239 <= i_25_fu_189_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & ~(ap_const_logic_0 == grp_atsc_rsdecoder_impl_decode_rs_char_fu_129_ap_done))) begin
        ncorrections_reg_232 <= grp_atsc_rsdecoder_impl_decode_rs_char_fu_129_ap_return;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st6_fsm_5 or exitcond_fu_183_p2) begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & ~(ap_const_lv1_0 == exitcond_fu_183_p2)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st6_fsm_5 or exitcond_fu_183_p2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & ~(ap_const_lv1_0 == exitcond_fu_183_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_25) begin
    if (ap_sig_bdd_25) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_51) begin
    if (ap_sig_bdd_51) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_60) begin
    if (ap_sig_bdd_60) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_131) begin
    if (ap_sig_bdd_131) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_75) begin
    if (ap_sig_bdd_75) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_88) begin
    if (ap_sig_bdd_88) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_143) begin
    if (ap_sig_bdd_143) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st3_fsm_2) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        rs_in_data_ce0 = ap_const_logic_1;
    end else begin
        rs_in_data_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st7_fsm_6) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        rs_out_data_ce0 = ap_const_logic_1;
    end else begin
        rs_out_data_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st7_fsm_6) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        rs_out_data_we0 = ap_const_logic_1;
    end else begin
        rs_out_data_we0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st6_fsm_5 or grp_atsc_rsdecoder_impl_decode_rs_char_fu_129_data_address0 or ap_sig_cseq_ST_st4_fsm_3 or tmp_s_fu_150_p1 or tmp_128_fu_178_p1 or tmp_130_fu_201_p1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        tmp_address0 = tmp_128_fu_178_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        tmp_address0 = tmp_s_fu_150_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        tmp_address0 = tmp_130_fu_201_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        tmp_address0 = grp_atsc_rsdecoder_impl_decode_rs_char_fu_129_data_address0;
    end else begin
        tmp_address0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st6_fsm_5 or grp_atsc_rsdecoder_impl_decode_rs_char_fu_129_data_ce0 or ap_sig_cseq_ST_st4_fsm_3) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) | (ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        tmp_ce0 = ap_const_logic_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        tmp_ce0 = grp_atsc_rsdecoder_impl_decode_rs_char_fu_129_data_ce0;
    end else begin
        tmp_ce0 = ap_const_logic_0;
    end
end

always @ (rs_in_data_q0 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st5_fsm_4 or grp_atsc_rsdecoder_impl_decode_rs_char_fu_129_data_d0 or ap_sig_cseq_ST_st4_fsm_3) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        tmp_d0 = rs_in_data_q0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        tmp_d0 = ap_const_lv8_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        tmp_d0 = grp_atsc_rsdecoder_impl_decode_rs_char_fu_129_data_d0;
    end else begin
        tmp_d0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st5_fsm_4 or grp_atsc_rsdecoder_impl_decode_rs_char_fu_129_data_we0 or exitcond2_fu_138_p2 or ap_sig_cseq_ST_st4_fsm_3) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond2_fu_138_p2)) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        tmp_we0 = ap_const_logic_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        tmp_we0 = grp_atsc_rsdecoder_impl_decode_rs_char_fu_129_data_we0;
    end else begin
        tmp_we0 = ap_const_logic_0;
    end
end
always @ (ap_start or ap_CS_fsm or exitcond1_fu_155_p2 or grp_atsc_rsdecoder_impl_decode_rs_char_fu_129_ap_done or exitcond_fu_183_p2 or exitcond2_fu_138_p2) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if ((ap_const_lv1_0 == exitcond2_fu_138_p2)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            if (~(exitcond1_fu_155_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st5_fsm_4 : 
        begin
            if (~(ap_const_logic_0 == grp_atsc_rsdecoder_impl_decode_rs_char_fu_129_ap_done)) begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_st6_fsm_5 : 
        begin
            if (~(ap_const_lv1_0 == exitcond_fu_183_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


assign ap_return = ncorrections_reg_232;


always @ (ap_CS_fsm) begin
    ap_sig_bdd_131 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_143 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_25 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_51 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_60 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_75 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_88 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

assign exitcond1_fu_155_p2 = (i1_reg_105 == ap_const_lv8_CF? 1'b1: 1'b0);

assign exitcond2_fu_138_p2 = (i_reg_94 == ap_const_lv6_30? 1'b1: 1'b0);

assign exitcond_fu_183_p2 = (i2_reg_117 == ap_const_lv8_BB? 1'b1: 1'b0);

assign grp_atsc_rsdecoder_impl_decode_rs_char_fu_129_ap_start = grp_atsc_rsdecoder_impl_decode_rs_char_fu_129_ap_start_ap_start_reg;

assign grp_atsc_rsdecoder_impl_decode_rs_char_fu_129_data_q0 = tmp_q0;

assign i_23_fu_161_p2 = (i1_reg_105 + ap_const_lv8_1);

assign i_24_fu_144_p2 = (i_reg_94 + ap_const_lv6_1);

assign i_25_fu_189_p2 = (i2_reg_117 + ap_const_lv8_1);

assign rs_in_data_address0 = tmp_126_fu_167_p1;

assign rs_out_data_address0 = tmp_131_fu_206_p1;

assign rs_out_data_d0 = tmp_q0;

assign tmp_126_fu_167_p1 = i1_reg_105;

assign tmp_127_fu_172_p2 = (i1_reg_105 + ap_const_lv8_30);

assign tmp_128_fu_178_p1 = tmp_127_fu_172_p2;

assign tmp_129_fu_195_p2 = (i2_reg_117 + ap_const_lv8_30);

assign tmp_130_fu_201_p1 = tmp_129_fu_195_p2;

assign tmp_131_fu_206_p1 = i2_reg_117;

assign tmp_s_fu_150_p1 = i_reg_94;


endmodule //atsc_rsdecoder_impl_decode

